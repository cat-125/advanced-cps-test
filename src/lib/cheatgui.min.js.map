{"version":3,"file":"cheatgui.min.js","mappings":"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","sources":["webpack://cheatgui/webpack/universalModuleDefinition","webpack://cheatgui/webpack/bootstrap","webpack://cheatgui/webpack/runtime/define property getters","webpack://cheatgui/webpack/runtime/hasOwnProperty shorthand","webpack://cheatgui/webpack/runtime/make namespace object","webpack://cheatgui/./src/js/config.js","webpack://cheatgui/./src/js/utils.js","webpack://cheatgui/./src/js/cheatgui.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cheatgui\"] = factory();\n\telse\n\t\troot[\"cheatgui\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const config = {\n\tsymbols: {\n\t\texpanded: '▼',\n\t\tcollapsed: '◀',\n\t\tresize: '&#9698;' // ◢\n\t},\n\tminWindowWidth: 150,\n\tminWindowHeight: 100,\n\tlanguage: {\n\t\t'close': 'Close'\n\t}\n};\n\nexport function updateConfig(newConfig) {\n\tfunction updateNestedConfig(config, newConfig) {\n\t\tfor (const [key, value] of Object.entries(newConfig)) {\n\t\t\tif (typeof value === 'object' && typeof config[key] === 'object') {\n\t\t\t\tupdateNestedConfig(config[key], value);\n\t\t\t} else if (config[key] !== undefined) {\n\t\t\t\tconfig[key] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateNestedConfig(config, newConfig);\n}\n\nexport function getConfig() {\n\treturn config;\n}","/**\n * Useful utilites\n * @module\n */\n\nimport {\n\tGUIElement,\n\tWidget,\n\tText,\n\tButton,\n\tInput,\n\tNumberInput,\n\tSlider,\n\tSwitch,\n\tDropdown,\n\tTree,\n\tContainer,\n\tRow\n} from './cheatgui.js';\n\n/**\n * Shortcut for `parent.querySelector(selector)`.\n * @param {any} selector - CSS selector\n * @param {any} [parent=document] - Parent element\n * @returns {HTMLElement | null}\n * @public\n */\nexport function $(selector, parent = document) {\n\tif (typeof selector !== 'string') return selector;\n\treturn $(parent).querySelector(selector);\n}\n\n/**\n * Create an HTML element\n * @param {string} type - HTML element \n * @returns {HTMLElement}\n * @public\n */\nexport function createElem(type) {\n\treturn document.createElement(type);\n}\n\n/**\n * Get the distance between two points\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @returns {number}\n * @public\n */\nexport function distance(x1, y1, x2, y2) {\n\tconst a = x1 - x2;\n\tconst b = y1 - y2;\n\treturn Math.sqrt(a * a + b * b);\n}\n\n/**\n * Generate a random string\n * @param {number} length\n * @param {string} _chars - List of characters to use in the random string\n * @returns {string}\n * @public\n */\nexport function generateId(length, _chars = '') {\n\tconst chars = _chars || 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n\tlet result = '';\n\tfor (let i = 0; i < length; i++) {\n\t\tresult += chars[Math.floor(Math.random() * chars.length)];\n\t}\n\treturn result;\n}\n\n/**\n * Clamp a value between a minimum and a maximum\n * @param {number} val\n * @param {number} min\n * @param {number} max\n * @returns {number}\n * @public\n */\nexport function clamp(val, min, max) {\n\treturn Math.max(min, Math.min(val, max));\n}\n\n/**\n * Convert a value between a minimum and a maximum to a percentage\n * @param {number} val\n * @param {number} min\n * @param {number} max\n * @returns {number}\n * @public\n */\nexport function range2percentage(val, min, max) {\n\treturn 100 / (max - min) * val;\n}\n\n/**\n * Snap a value to the nearest multiple of a step\n * @param {number} value\n * @param {number} step\n * @returns {number}\n * @public\n */\nexport function snap(value, step) {\n\tif (step === 0) {\n\t\tthrow new Error(\"Step cannot be zero\");\n\t}\n\n\tconst remainder = value % step;\n\tlet result;\n\n\tif (remainder <= step / 2) {\n\t\tresult = value - remainder;\n\t} else {\n\t\tresult = value + step - remainder;\n\t}\n\n\treturn result;\n}\n\n/**\n * Get the number of digits after the decimal point\n * @param {number} number\n * @returns {number}\n * @deprecated use getNumberOfDigitsAfterPeriod instead\n * @public\n */\nexport function getNumberOfDigitsAfterPeriod(number) {\n\tlet stringNumber = number.toString();\n\tlet parts = stringNumber.split(\".\");\n\n\tif (parts.length > 1) {\n\t\treturn parts[1].length;\n\t}\n\treturn 0;\n}\n\n/**\n * Get the number of digits after the decimal point\n * @param {number} number\n * @returns {number}\n * @public\n */\nexport function countDigitsAfterDecimal(number) {\n\tconst numberString = number.toString();\n\tconst indexOfDecimal = numberString.indexOf('.');\n\n\tif (indexOfDecimal === -1) return 0;\n\treturn numberString.length - indexOfDecimal - 1;\n}\n\n/**\n * Get the name of a widget\n * @param {GUIElement} widget\n * @returns {string}\n * @public\n */\nexport function getWidgetName(widget) {\n\tif (typeof widget == 'string' || widget instanceof Text) {\n\t\treturn 'text';\n\t} else if (widget instanceof Button) {\n\t\treturn 'button'\n\t} else if (widget instanceof Input) {\n\t\treturn 'input';\n\t} else if (widget instanceof NumberInput) {\n\t\treturn 'number-input';\n\t} else if (widget instanceof Switch) {\n\t\treturn 'switch';\n\t} else if (widget instanceof Slider) {\n\t\treturn 'slider';\n\t} else if (widget instanceof Dropdown) {\n\t\treturn 'dropdown';\n\t} else if (widget instanceof Tree) {\n\t\treturn 'tree';\n\t} else if (widget instanceof Container) {\n\t\treturn 'container';\n\t} else if (widget instanceof Row) {\n\t\treturn 'row';\n\t} else if (typeof widget.view !== 'undefined') {\n\t\treturn 'has-view';\n\t} else if (widget instanceof Widget) {\n\t\treturn 'widget'\n\t} else if (widget instanceof GUIElement) {\n\t\treturn 'gui-element';\n\t} else {\n\t\treturn 'unknown';\n\t}\n}\n\n/**\n * Append a widget to the body\n * @param {Widget} widget\n * @public\n */\nexport function appendToBody(widget) {\n\tdocument.body.appendChild(widget.getRef());\n}\n\n/**\n * Include a CSS code\n * @param {string} css\n * @public\n */\nexport function includeCSS(css) {\n\tconst head = document.head;\n\tconst style = createElem('style');\n\tstyle.setAttribute('type', 'text/css');\n\tstyle.innerHTML = css;\n\thead.appendChild(style);\n}\n\n/**\n * Include a CSS link\n * @param {string} url\n * @public\n */\nexport function includeCSSLink(url) {\n\tconst link = createElem('link');\n\tlink.rel = 'stylesheet';\n\tlink.href = url;\n\tdocument.head.appendChild(link);\n}\n\n/**\n * Include a JS file\n * @param {string} url\n * @public\n */\nexport function includeJS(url) {\n\tconst script = createElem('script');\n\tscript.src = url;\n\tdocument.body.appendChild(script);\n}\n\n/**\n * Load a CSS theme\n * @param {string} url\n * @public\n */\nexport function loadTheme(url) {\n\tconst link = $(`link#cgui-theme`, document.head) ?? createElem('link');\n\tlink.id = 'cgui-theme'\n\tlink.rel = 'stylesheet';\n\tlink.href = url;\n\tdocument.head.appendChild(link);\n}","import '../css/cheatgui.css';\n\nimport { config, getConfig, updateConfig } from './config.js';\nimport * as utils from './utils.js';\n\n/**\n * CheatGUI\n * \n * @module\n * @author Cat-125\n * @license MIT\n * @see https://github.com/Cat-125/CheatGUI\n */\n\nconst isMobile = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(navigator.userAgent);\n\nconst { $, createElem, generateId, distance, clamp, range2percentage, snap, countDigitsAfterDecimal } = utils;\n\n/**\n * The base class for all elements in CheatGUI.\n * @public\n */\nclass GUIElement {\n\tconstructor() {\n\t\tthis.ref = null;\n\t}\n\n\t/** Do the necessary initialization. */\n\t_init() {\n\t\tthis.addClass('cgui');\n\t}\n\n\t/**\n\t * Add one or more classes to an element.\n\t * @param {string} classes\n\t * @returns {GUIElement}\n\t */\n\taddClass(...classes) {\n\t\tthis.ref.classList.add(...classes);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set a class for an element with all previous classes deleted.\n\t * @param {string} className\n\t * @returns {GUIElement}\n\t */\n\tsetClass(className) {\n\t\tthis.ref.className = 'cgui-widget ' + className.trim();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove one or more classes from an element.\n\t * @param {string} classes\n\t * @returns {GUIElement}\n\t */\n\tremoveClass(...classes) {\n\t\tthis.ref.classList.remove(...classes);\n\t\treturn this;\n\t}\n\n\t/**\n\t * @returns {HTMLElement|null}\n\t */\n\tgetRef() {\n\t\treturn this.ref;\n\t}\n\n\t/**\n\t * Destroy the element\n\t */\n\tdestroy() {\n\t\tif (typeof this.view !== 'undefined') this.view.destroy();\n\t\tthis.ref.remove();\n\t}\n}\n\n/**\n * A class that stores interface elements and displays them on a web page.\n * @public\n */\nclass View {\n\tconstructor() {\n\t\tthis.ref = null;\n\t\tthis.children = [];\n\t}\n\n\t/**\n\t * Create an HTML element for the view and don't add it anywhere.\n\t * @returns {View}\n\t */\n\tinit() {\n\t\tthis.ref = createElem('div');\n\t\treturn this;\n\t}\n\n\t/**\n\t * Use an existing HTML element for the view.\n\t * @param {HTMLElement} target\n\t * @returns {View}\n\t */\n\tmount(target) {\n\t\tthis.ref = $(target);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the contents of the view.\n\t * @param {string} value\n\t * @returns {View}\n\t */\n\tsetContent(value) {\n\t\tthis.ref.innerHTML = value;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the contents of the view.\n\t * @param {string} value\n\t * @returns {View}\n\t */\n\tsetText(value) {\n\t\tthis.ref.textContent = value;\n\t\treturn this;\n\t}\n\n\t/**\n\t * The `append` function appends a widget to a parent element and updates the list of children.\n\t * @param {GUIElement} widget - The widget to append.\n\t * @returns {View}\n\t */\n\tappend(widget) {\n\t\tthis.ref.appendChild(widget.getRef());\n\t\tthis.children.push(widget);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Destroy the view and all its children.\n\t */\n\tdestroy() {\n\t\tthis.children.forEach(c => c.destroy());\n\t\tthis.ref = null;\n\t}\n\n\t/**\n\t * Recursively returns a JSON representation of all values in the view.\n\t * @returns {Object}\n\t */\n\tgetConfig() {\n\t\tfunction processView(view) {\n\t\t\tconst res = {\n\t\t\t\ttype: 'root',\n\t\t\t\tvalue: []\n\t\t\t};\n\n\t\t\tfor (let i = 0; i < view.children.length; i++) {\n\t\t\t\tconst child = view.children[i];\n\t\t\t\tconst type = utils.getWidgetName(child);\n\t\t\t\tconst el = { type };\n\n\t\t\t\tif (['input', 'number-input', 'switch', 'slider', 'select'].includes(type)) {\n\t\t\t\t\tel.value = child.getValue();\n\t\t\t\t} else if (type == 'tree') {\n\t\t\t\t\tel.value = processView(child.view).value;\n\t\t\t\t} else if (type == 'has-view') {\n\t\t\t\t\tel.value = processView(child.view).value;\n\t\t\t\t} else if (typeof child.getValue === 'function')\n\t\t\t\t\tel.value = child.getValue();\n\n\t\t\t\tres.value[i] = el;\n\t\t\t}\n\n\t\t\treturn res;\n\t\t}\n\n\t\treturn processView(this);\n\t}\n\n\t/**\n\t * Recursively loads the values of all child elements from the object.\n\t * @param {Object} config\n\t */\n\tloadConfig(config) {\n\t\tfunction processView(view, item) {\n\t\t\tconst items = item.value;\n\t\t\tconst widgets = view.children;\n\t\t\tlet offset = 0;\n\t\t\tlet warned = false;\n\t\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\t\tif (items[i].type != utils.getWidgetName(widgets[i + offset])) {\n\t\t\t\t\tif (!warned) {\n\t\t\t\t\t\tconsole.warn(`Configuration mismatch! Trying to merge automatically... (${items[i].type}#${i} != ${utils.getWidgetName(widgets[i + offset])}#${i + offset} with offset ${offset})`);\n\t\t\t\t\t\twarned = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (items.length == widgets.length) {\n\t\t\t\t\t\tconsole.warn(`Skipping field \"${items[i].type}\"`)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (items.length < widgets.length) {\n\t\t\t\t\t\tif (items[i] == utils.getWidgetName(widgets[i + offset + 1])) {\n\t\t\t\t\t\t\tconsole.warn(`Assuming that ${widgets[i + offset - 1]} field has been added`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\toffset++;\n\t\t\t\t\t} else if (items.length > widgets.length) {\n\t\t\t\t\t\tif (items[i] == utils.getWidgetName(widgets[i + offset - 1])) {\n\t\t\t\t\t\t\tconsole.warn(`Assuming that ${items[i + offset - 1]} field has been removed`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\toffset--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('Unable to merge automatically; skipping')\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (['input', 'number-input', 'switch', 'slider', 'dropdown'].includes(items[i].type))\n\t\t\t\t\twidgets[i + offset].setValue(items[i].value);\n\t\t\t\telse if (items[i].type == 'tree' || items[i].type == 'has-view')\n\t\t\t\t\twidgets[i + offset].view.loadConfig(items[i]);\n\t\t\t}\n\t\t}\n\n\t\tprocessView(this, config);\n\t}\n}\n\n/**\n * This class represents a window with\n * various settings and the ability to\n * add child elements.\n * @public\n * @extends GUIElement\n */\nclass Window extends GUIElement {\n\t/**\n\t * Creates a new window element.\n\t * @param {Object} options - The options for the window\n\t * @param {number} [options.x=0] - The x position of the window\n\t * @param {number} [options.y=0] - The y position of the window\n\t * @param {number} [options.width=100] - The width of the window\n\t * @param {number} [options.height=100] - The height of the window\n\t * @param {string} [options.title=''] - The title of the window\n\t * @param {boolean} [options.expanded=true] - Whether the window is initially expanded\n\t * @param {boolean} [options.collapsible=true] - Whether the window can be collapsed\n\t * @param {number} [options.collapseThreshold=isMobile ? 10 : 3] - The threshold at which the window can be collapsed\n\t * @param {boolean} [options.draggable=true] - Whether the window can be dragged\n\t * @param {number} [options.dragThreshold=isMobile ? 10 : 3] - The threshold at which the window can be dragged\n\t * @param {boolean} [options.resizable=true] - Whether the window can be resized\n\t */\n\tconstructor({\n\t\tx = 0,\n\t\ty = 0,\n\t\twidth = 100,\n\t\theight = 100,\n\t\ttitle = '',\n\t\texpanded = true,\n\t\tcollapsible = true,\n\t\tcollapseThreshold = isMobile ? 10 : 3,\n\t\tdraggable = true,\n\t\tdragThreshold = isMobile ? 10 : 3,\n\t\tresizable = true\n\t}) {\n\t\tsuper();\n\t\t// Create window element and set its properties\n\t\tthis.ref = createElem('div');\n\t\tthis._init();\n\t\tthis.addClass('cgui-window');\n\t\tthis.ref.style.position = 'absolute';\n\t\tthis.ref.role = 'dialog';\n\n\t\t// Create header element and set its properties\n\t\tthis.headerRef = createElem('div');\n\t\tthis.headerRef.classList.add('cgui-window-header');\n\n\t\t// Create title element and set its properties\n\t\tconst titleId = generateId(16);\n\t\tthis.titleRef = createElem('span');\n\t\tthis.titleRef.innerHTML = title;\n\t\tthis.titleRef.id = titleId;\n\t\tthis.titleRef.className = 'cgui-window-title';\n\t\tthis.headerRef.appendChild(this.titleRef);\n\t\tthis.setTitle(title);\n\t\tthis.ref.setAttribute('aria-labeledby', titleId);\n\n\t\t// Add space after title\n\t\tthis.headerRef.innerHTML += '&nbsp;';\n\n\t\t// Create arrow element and set its properties\n\t\tthis.arrowRef = createElem('span');\n\t\tthis.arrowRef.className = 'cgui-window-arrow';\n\t\tthis.arrowRef.innerHTML = config.symbols.expanded;\n\t\tthis.arrowRef.hidden = !collapsible;\n\t\tthis.headerRef.appendChild(this.arrowRef);\n\n\t\t// Create content element and set its properties\n\t\tconst contentId = generateId(16);\n\t\tthis.contentRef = createElem('div');\n\t\tthis.contentRef.id = contentId;\n\t\tthis.contentRef.classList.add('cgui-window-content');\n\t\tthis.ref.setAttribute('aria-describedby', contentId);\n\n\t\t// Create resize element and set its properties\n\t\tthis.resizeRef = createElem('span');\n\t\tthis.resizeRef.className = 'cgui-window-resize';\n\t\tthis.resizeRef.innerHTML = config.symbols.resize;\n\t\tthis.resizeRef.hidden = !resizable;\n\n\t\t// Create new View and mount it\n\t\tthis.view = new View().mount(this.contentRef);\n\n\t\t// Append header and content to the window element\n\t\tthis.ref.appendChild(this.headerRef);\n\t\tthis.ref.appendChild(this.contentRef);\n\t\tthis.ref.appendChild(this.resizeRef);\n\n\t\t// Set window position and size\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.ref.style.left = `${x}px`;\n\t\tthis.ref.style.top = `${y}px`;\n\t\tthis.resize(width, height);\n\n\t\t// Set initial collapsed state\n\t\tthis.collapsed = !expanded;\n\t\tif (this.collapsed) this.collapse();\n\n\t\t// Add window to the document body\n\t\tdocument.body.appendChild(this.ref);\n\n\t\t// Initialize draggable, toggle, and activation functionality\n\t\tthis.isDragging = this.isResizing = false;\n\t\tif (draggable) this.initDraggable(dragThreshold);\n\t\tif (resizable) this.initResize();\n\t\tif (collapsible) this.initToggleOnClick(collapseThreshold);\n\t\tthis.initActivationOnClick();\n\t}\n\n\t/**\n\t * Set the title of the window to the specified HTML string.\n\t * @param {string} html - The HTML to set as the title\n\t * @returns {Window}\n\t */\n\tsetTitle(html) {\n\t\tthis.titleRef.innerHTML = html;\n\t\treturn this;\n\t}\n\n\t/**\n\t * The `setContent` function sets the content of a view.\n\t * @param value - The `value` parameter in the `setContent` function represents the content that you\n\t * want to set for a particular view. It is the data or information that you want to display or\n\t * update in the view.\n\t * @returns {Window}\n\t */\n\tsetContent(value) {\n\t\tthis.view.setContent(value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The `setText` function sets the text value of a view element.\n\t * @param value - The `value` parameter in the `setText` function represents the text that you want\n\t * to set for a particular view. It is the text that you want to display or update in the view.\n\t * @returns {Window}\n\t */\n\tsetText(value) {\n\t\tthis.view.setText(value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The `append` function appends a widget to a parent element and updates the list of children.\n\t * @param {GUIElement} widget - The widget to append.\n\t * @returns {Window}\n\t */\n\tappend(widget) {\n\t\tthis.view.append(widget);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The `move` function moves the window to the specified coordinates.\n\t * @param {number} x - The x coordinate of the window.\n\t * @param {number} y - The y coordinate of the window.\n\t * @returns {Window}\n\t */\n\tmove(x, y) {\n\t\tthis.ref.style.left = `${x}px`;\n\t\tthis.ref.style.top = `${y}px`;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * The `setWidth` function sets the width of the window.\n\t * @param {number} width\n\t * @returns {Window}\n\t */\n\tsetWidth(width) {\n\t\twidth = Math.max(width, config.minWindowWidth);\n\t\tthis.width = width;\n\t\tthis.ref.style.width = `${width}px`;\n\t\treturn this;\n\t}\n\n\t/**\n\t * The `setHeight` function sets the height of the window.\n\t * @param {number} height\n\t * @returns {Window}\n\t */\n\tsetHeight(height) {\n\t\theight = Math.max(height, config.minWindowHeight);\n\t\tthis.height = height;\n\t\tthis.contentRef.style.height = `${height}px`;\n\t\treturn this;\n\t}\n\n\t/**\n\t * The `resize` function sets the width and height of the window.\n\t * @param {number} width - The new width of the window\n\t * @param {number} height - The new height of the window\n\t * @returns {Window}\n\t */\n\tresize(width, height) {\n\t\tthis.setWidth(width);\n\t\tthis.setHeight(height);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The `collapse` function collapses the window.\n\t * @returns {Window}\n\t */\n\tcollapse() {\n\t\tthis.collapsed = true;\n\t\tthis.ref.classList.add('collapsed');\n\t\tthis.arrowRef.innerHTML = config.symbols.collapsed;\n\t\treturn this;\n\t}\n\n\t/**\n\t * The `expand` function expands the window.\n\t * @returns {Window}\n\t */\n\texpand() {\n\t\tthis.collapsed = false;\n\t\tthis.ref.classList.remove('collapsed');\n\t\tthis.arrowRef.innerHTML = config.symbols.expanded;\n\t\treturn this;\n\t}\n\n\t/**\n\t * The `toggle` function toggles the window between collapsed and expanded.\n\t * @returns {Window}\n\t */\n\ttoggle() {\n\t\tif (this.collapsed) {\n\t\t\tthis.expand();\n\t\t} else {\n\t\t\tthis.collapse();\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * The `hide` function hides the window.\n\t * @returns {Window}\n\t */\n\thide() {\n\t\tthis.ref.style.display = 'none';\n\t\treturn this;\n\t}\n\n\t/**\n\t * The `show` function shows the window.\n\t * @returns {Window}\n\t */\n\tshow() {\n\t\tthis.ref.style.display = 'block';\n\t\treturn this;\n\t}\n\n\t/**\n\t * The `destroy` function destroys the window.\n\t */\n\tdestroy() {\n\t\tthis.view.destroy();\n\t\tthis.ref.remove();\n\t}\n\n\t/**\n\t * The `sendToTop` function sends the window to the top of the window stack.\n\t * @returns {Window}\n\t */\n\tsendToTop() {\n\t\tif (this.ref.classList.contains('active')) return;\n\t\t[...document.getElementsByClassName('cgui-window')].forEach(win => win.classList.remove('active'));\n\t\tthis.ref.classList.add('active');\n\t}\n\n\tinitActivationOnClick() {\n\t\tthis.ref.addEventListener('pointerdown', () => {\n\t\t\tthis.sendToTop();\n\t\t});\n\t}\n\n\tinitToggleOnClick(threshold) {\n\t\tlet isClick = false,\n\t\t\tstartX, startY;\n\t\tthis.headerRef.addEventListener('pointerdown', e => {\n\t\t\tisClick = true;\n\t\t\tstartX = e.clientX;\n\t\t\tstartY = e.clientY;\n\t\t});\n\t\tdocument.addEventListener('pointermove', e => {\n\t\t\tif (distance(startX, startY, e.clientX, e.clientY) > threshold)\n\t\t\t\tisClick = false;\n\t\t});\n\t\tthis.headerRef.addEventListener('pointerup', () => {\n\t\t\tif (isClick) this.toggle();\n\t\t});\n\t}\n\n\tinitDraggable(threshold) {\n\t\tlet startX, startY, offsetX, offsetY,\n\t\t\tisMouseDown = false;\n\n\t\tconst startDragging = (e) => {\n\t\t\tthis.isDragging = true;\n\t\t\tthis.ref.classList.add('cgui-dragging');\n\t\t}\n\n\t\tconst onMouseDown = (e) => {\n\t\t\te.preventDefault();\n\t\t\te = e.touches ? e.touches[0] : e;\n\t\t\tisMouseDown = true;\n\t\t\tstartX = e.clientX;\n\t\t\tstartY = e.clientY;\n\t\t\toffsetX = e.clientX - this.ref.offsetLeft;\n\t\t\toffsetY = e.clientY - this.ref.offsetTop;\n\t\t};\n\n\t\tconst onMouseMove = (e) => {\n\t\t\te = e.touches ? e.touches[0] : e;\n\t\t\tif (!this.isDragging) {\n\t\t\t\tif (isMouseDown && distance(startX, startY, e.clientX, e.clientY) > threshold &&\n\t\t\t\t\t!this.isResizing) {\n\t\t\t\t\tstartDragging();\n\t\t\t\t}\n\t\t\t\telse return;\n\t\t\t}\n\t\t\tthis.move(e.clientX - offsetX, e.clientY - offsetY);\n\t\t};\n\n\t\tconst onMouseUp = () => {\n\t\t\tthis.isDragging = isMouseDown = false;\n\t\t\tif (this.ref.classList.contains('cgui-dragging'))\n\t\t\t\tthis.ref.classList.remove('cgui-dragging');\n\t\t};\n\n\t\tthis.headerRef.addEventListener('mousedown', onMouseDown);\n\t\tthis.headerRef.addEventListener('touchstart', onMouseDown);\n\n\t\tdocument.addEventListener('mousemove', onMouseMove);\n\t\tdocument.addEventListener('touchmove', onMouseMove);\n\n\t\tdocument.addEventListener('mouseup', onMouseUp);\n\t\tdocument.addEventListener('touchend', onMouseUp);\n\t}\n\n\tinitResize() {\n\t\tlet sx, sy, dx, dy, iw, ih;\n\n\t\tconst onMouseDown = (e) => {\n\t\t\tif (this.collapsed) return;\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\te = e.touches ? e.touches[0] : e;\n\t\t\tthis.isResizing = true;\n\t\t\t[sx, sy, iw, ih] = [e.clientX, e.clientY, this.width, this.height];\n\t\t\tthis.addClass('cgui-resizing');\n\t\t};\n\n\t\tconst onMouseMove = (e) => {\n\t\t\tif (this.isResizing) {\n\t\t\t\te = e.touches ? e.touches[0] : e;\n\t\t\t\tdx = e.clientX - sx;\n\t\t\t\tdy = e.clientY - sy;\n\t\t\t\tconst newWidth = iw + dx;\n\t\t\t\tconst newHeight = ih + dy;\n\t\t\t\tthis.setWidth(newWidth);\n\t\t\t\tthis.setHeight(newHeight);\n\t\t\t}\n\t\t};\n\n\t\tconst onMouseUp = () => {\n\t\t\tthis.isResizing = false;\n\t\t\tthis.removeClass('cgui-resizing');\n\t\t};\n\n\t\tthis.resizeRef.addEventListener('mousedown', onMouseDown);\n\t\tdocument.addEventListener('mousemove', onMouseMove);\n\t\tdocument.addEventListener('mouseup', onMouseUp);\n\n\t\tthis.resizeRef.addEventListener('touchstart', onMouseDown);\n\t\tdocument.addEventListener('touchmove', onMouseMove);\n\t\tdocument.addEventListener('touchend', onMouseUp);\n\t}\n\n\t/**\n\t * The `getRef` function returns the reference to the window element.\n\t * @returns {HTMLElement}\n\t */\n\tgetRef() {\n\t\treturn this.ref;\n\t}\n\n\t/**\n\t * The `children` getter returns the list of children.\n\t */\n\tget children() {\n\t\treturn this.view.children;\n\t}\n\n\t/**\n\t * The `getConfig` function returns a JSON representation of all values in the window.\n\t * @returns {Object}\n\t */\n\tgetConfig() {\n\t\treturn this.view.getConfig();\n\t}\n\n\t/**\n\t * The `loadConfig` function loads a JSON configuration into the window.\n\t * @param {Object} config - The JSON configuration.\n\t * @returns {Window}\n\t */\n\tloadConfig(config) {\n\t\tthis.view.loadConfig(config);\n\t\treturn this;\n\t}\n}\n\n/**\n * A class that represents a user interface widget.\n * @public\n * @extends GUIElement\n */\nclass Widget extends GUIElement {\n\t/**\n\t * Create a new widget and initialize it.\n\t * @param {string} [elementType='div'] - The HTML element type.\n\t */\n\tconstructor(elementType = 'div') {\n\t\tsuper();\n\t\tthis.ref = createElem(elementType);\n\t\tthis._init();\n\t\tthis.addClass('cgui-widget');\n\t}\n\n\t/**\n\t * Set the content of the widget.\n\t * @param {string} value - The value to set the content to.\n\t * @returns {Widget}\n\t */\n\tsetContent(value) {\n\t\tthis.ref.innerHTML = value;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the text of the widget.\n\t * @param {string} value - The value to set the text to.\n\t * @returns {Widget}\n\t */\n\tsetText(value) {\n\t\tthis.ref.textContent = value;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a click event listener to the widget.\n\t * @param {Function} f - The function to call when the widget is clicked.\n\t * @returns {Widget}\n\t */\n\tonClick(f) {\n\t\tthis.ref.addEventListener('click', f);\n\t\treturn this;\n\t}\n\n\tbind(obj, prop) {\n\t\tthrow new SyntaxError(\"The `click` event cannot be bound. Use `onClick()` instead.\");\n\t}\n}\n\n/**\n * A class that represents a text widget.\n * @public\n */\nclass Text extends Widget {\n\t/**\n\t * Create a new text widget and initialize it.\n\t * @param {string} [text=''] - The text to display.\n\t */\n\tconstructor(text = '') {\n\t\tsuper('div');\n\t\tthis.addClass('cgui-text');\n\t\tthis.setText(text);\n\t}\n}\n\n/**\n * A class that represents a button widget.\n * @public\n * @extends Widget\n */\nclass Button extends Widget {\n\t/**\n\t * Create a new button widget and initialize it.\n\t * @param {string} [text=''] - Button text.\n\t * @param {Function} [callback=null] - The function to call when the button is clicked.\n\t */\n\tconstructor(text = '', callback = null) {\n\t\tsuper('button');\n\t\tthis.addClass('cgui-btn');\n\t\tthis.setText(text);\n\t\tif (callback) this.onClick(callback);\n\t}\n}\n\n/**\n * A class that represents an input field widget.\n * @public\n * @extends Widget\n */\nclass Input extends Widget {\n\t/**\n\t * Create a new input field widget and initialize it.\n\t * @param {string} [label=''] - The label text.\n\t * @param {string} [val=''] - The initial value.\n\t * @param {Function} [callback=null] - The function to call when the input is changed.\n\t */\n\tconstructor(label = '', val = '', callback = null) {\n\t\tsuper('div');\n\n\t\tthis.addClass('cgui-input-wrapper');\n\n\t\tthis.inputRef = createElem('input');\n\t\tthis.inputRef.classList.add('cgui-input');\n\t\tthis.ref.appendChild(this.inputRef);\n\n\t\tthis.labelRef = createElem('div');\n\t\tthis.labelRef.classList.add('cgui-input-label');\n\t\tthis.ref.appendChild(this.labelRef);\n\n\t\tthis.setValue(val);\n\t\tthis.setLabel(label);\n\n\t\tif (callback) this.onInput(callback);\n\t}\n\n\t/**\n\t * Set the label of the input field.\n\t * @param {string} label - The new label text.\n\t * @returns {Input}\n\t */\n\tsetLabel(label) {\n\t\tthis.labelRef.innerHTML = label;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add an input event listener to the input field.\n\t * @param {Function} f - The function to call when the input is changed.\n\t * @returns {Input}\n\t */\n\tonInput(f) {\n\t\tthis.inputRef.addEventListener('input', e => f(e, this.getValue()));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Bind an input field to an object property.\n\t * @param {Object} obj - The object to bind the property to.\n\t * @param {string} prop - The property to bind.\n\t * @returns {Input}\n\t */\n\tbind(obj, prop) {\n\t\tthis.onInput((_, val) => obj[prop] = val);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the value of the input field.\n\t * @param {string} value \n\t * @returns {Input}\n\t */\n\tsetValue(value) {\n\t\tthis.inputRef.value = value;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the value of the input field.\n\t * @returns {string} - The value of the input field.\n\t */\n\tgetValue() {\n\t\treturn this.inputRef.value;\n\t}\n}\n\n/**\n * A class that represents an input field\n * where only numbers can be entered.\n * @public\n * @extends Widget\n */\nclass NumberInput extends Widget {\n\t/**\n\t * Create a new number input field and initialize it.\n\t * @param {string} [label=''] - The label text.\n\t * @param {number} [value=0] - The initial value.\n\t * @param {Function} [callback=null] - The function to call when the input is changed.\n\t */\n\tconstructor(label = '', value = 0, callback = null) {\n\t\tsuper('div');\n\n\t\tthis.addClass('cgui-input-wrapper');\n\n\t\tthis.inputRef = createElem('input');\n\t\tthis.inputRef.classList.add('cgui-input');\n\t\tthis.inputRef.type = 'number';\n\t\tthis.ref.appendChild(this.inputRef);\n\n\t\tthis.labelRef = createElem('div');\n\t\tthis.labelRef.classList.add('cgui-input-label');\n\t\tthis.ref.appendChild(this.labelRef);\n\n\t\tthis.setValue(value);\n\t\tthis.setLabel(label);\n\n\t\tif (callback) this.onInput(callback);\n\t}\n\n\t/**\n\t * Set the label of the input field.\n\t * @param {string} label - The new label text.\n\t * @returns {NumberInput}\n\t */\n\tsetLabel(label) {\n\t\tthis.labelRef.innerHTML = label;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add an input event listener to the input field.\n\t * @param {Function} f - The function to call when the input is changed.\n\t * @returns {NumberInput}\n\t */\n\tonInput(f) {\n\t\tthis.inputRef.addEventListener('input', e => f(e, this.getValue()));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Bind an input field to an object property.\n\t * @param {Object} obj - The object to bind the property to.\n\t * @param {string} prop - The property to bind.\n\t * @returns {NumberInput}\n\t */\n\tbind(obj, prop) {\n\t\tthis.onInput((_, val) => obj[prop] = val);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the value of the input field.\n\t * @param {string} value \n\t * @returns {NumberInput}\n\t */\n\tsetValue(value) {\n\t\tconst p = parseFloat(value);\n\t\tthis.inputRef.value = isNaN(p) ? 0 : (p || 0);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the value of the input field.\n\t * @returns {string} - The value of the input field.\n\t */\n\tgetValue() {\n\t\tconst p = parseFloat(this.inputRef.value);\n\t\treturn isNaN(p) ? 0 : (p || 0);\n\t}\n}\n\n/**\n * A class representing a slider where you can select a value from a specific range.\n * @public\n * @extends Widget\n */\nclass Slider extends Widget {\n\t/**\n\t * Create a new slider and initialize it.\n\t * @param {Object} options - The options for the slider\n\t * @param {string} [options.label=''] - The label text\n\t * @param {number} [options.value=0] - The initial value\n\t * @param {number} [options.min=0] - The minimum value\n\t * @param {number} [options.max=100] - The maximum value\n\t * @param {number} [options.step=1] - The step size\n\t * @param {null} [options.callback=null] - The function to call when the slider is changed\n\t */\n\tconstructor({\n\t\tlabel = '',\n\t\tvalue = 0,\n\t\tmin = 0,\n\t\tmax = 100,\n\t\tstep = 1,\n\t\tcallback = null\n\t}) {\n\t\tsuper('div');\n\n\t\tthis.addClass('cgui-slider-wrapper');\n\n\t\tthis.sliderRef = createElem('div');\n\t\tthis.sliderRef.classList.add('cgui-slider');\n\t\tthis.ref.appendChild(this.sliderRef);\n\n\t\tthis.thumbRef = createElem('div');\n\t\tthis.thumbRef.classList.add('cgui-slider-thumb');\n\t\tthis.sliderRef.appendChild(this.thumbRef);\n\n\t\tthis.labelRef = createElem('div');\n\t\tthis.labelRef.classList.add('cgui-slider-label');\n\t\tthis.ref.appendChild(this.labelRef);\n\n\t\tthis.setMin(min);\n\t\tthis.setMax(max);\n\t\tthis.setStep(step);\n\n\t\tthis.setValue(value);\n\t\tthis.setLabel(label);\n\n\t\tthis.initSlider();\n\n\t\tif (callback) this.onChange(callback);\n\t}\n\n\t/**\n\t * Set the label of the slider.\n\t * @param {string} text - The new label text.\n\t * @returns {Slider}\n\t */\n\tsetLabel(text) {\n\t\tthis.labelRef.innerHTML = text;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a change event listener to the slider.\n\t * @param {Function} f - The function to call when the slider is changed.\n\t * @returns {Slider}\n\t */\n\tonChange(f) {\n\t\tthis.ref.addEventListener('change', e => f(e, this.getValue()));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Bind a slider to an object property.\n\t * @param {Object} obj - The object to bind the property to.\n\t * @param {string} prop - The property to bind.\n\t * @returns {Slider}\n\t */\n\tbind(obj, prop) {\n\t\tthis.onChange((_, val) => obj[prop] = val);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the minimum value of the slider.\n\t * @param {number} min - The new minimum value.\n\t * @returns {Slider}\n\t */\n\tsetMin(min) {\n\t\tthis.min = min;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the maximum value of the slider.\n\t * @param {number} max - The new maximum value.\n\t * @returns {Slider}\n\t */\n\tsetMax(max) {\n\t\tthis.max = max;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the step size of the slider.\n\t * @param {number} step - The new step size.\n\t * @returns {Slider}\n\t */\n\tsetStep(step) {\n\t\tthis.step = step;\n\t\tthis.accuracy = countDigitsAfterDecimal(step);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the value of the slider.\n\t * @param {number} value - The new value.\n\t */\n\tsetValue(value) {\n\t\tvalue = parseFloat(clamp(snap(value, this.step), this.min, this.max).toFixed(this.accuracy));\n\t\tthis.value = value;\n\t\tconst displayValue = 100 / (this.max - this.min) * (value - this.min);\n\t\tthis.thumbRef.style.marginLeft = displayValue + '%';\n\t\tthis.thumbRef.style.transform = `translateX(-${displayValue}%)`;\n\t\tthis.thumbRef.textContent = value;\n\t\treturn this;\n\t}\n\n\n\tinitSlider() {\n\t\tlet isDragging = false;\n\t\tlet listeners = new Array(2);\n\t\tconst onMouseDown = e => {\n\t\t\tisDragging = true;\n\t\t\tupdateSlider(e);\n\t\t\tlisteners[0] = document.addEventListener('mousemove', updateSlider);\n\t\t\tlisteners[1] = document.addEventListener('touchmove', updateSlider);\n\t\t};\n\t\tconst onMouseUp = () => {\n\t\t\tif (!isDragging) return;\n\t\t\tisDragging = false;\n\t\t\tthis.ref.dispatchEvent(new CustomEvent('change'));\n\t\t\tdocument.removeEventListener('mousemove', listeners[0]);\n\t\t\tdocument.removeEventListener('touchmove', listeners[1]);\n\t\t};\n\t\tconst updateSlider = e => {\n\t\t\tif (!isDragging) return;\n\t\t\te.preventDefault();\n\t\t\te = e.touches ? e.touches[0] : e;\n\t\t\tconst bb = this.sliderRef.getBoundingClientRect();\n\t\t\tconst style1 = getComputedStyle(this.sliderRef);\n\t\t\tconst style2 = getComputedStyle(this.thumbRef);\n\t\t\tthis.setValue(range2percentage(\n\t\t\t\t(e.clientX - bb.left - (parseFloat(getComputedStyle(this.thumbRef).getPropertyValue('width')) / 1.6)),\n\t\t\t\tbb.left + parseFloat(style1.getPropertyValue('padding-left')) +\n\t\t\t\tparseInt(style2.getPropertyValue('width')) / 2,\n\t\t\t\tbb.right - parseFloat(style1.getPropertyValue('padding-right')) -\n\t\t\t\tparseInt(style2.getPropertyValue('width')) / 2\n\t\t\t) / 100 * (this.max - this.min) + this.min);\n\t\t};\n\t\tthis.sliderRef.addEventListener('mousedown', onMouseDown);\n\t\tdocument.addEventListener('mouseup', onMouseUp);\n\t\tthis.sliderRef.addEventListener('touchstart', onMouseDown);\n\t\tdocument.addEventListener('touchend', onMouseUp);\n\t}\n\n\t/**\n\t * Get the current value of the slider.\n\t * @returns {number}\n\t */\n\tgetValue() {\n\t\treturn this.value;\n\t}\n}\n\n/**\n * A class that represents a switch that can be turned on and off.\n * @public\n * @extends Widget\n */\nclass Switch extends Widget {\n\t/**\n\t * Create a new switch.\n\t * @param {string} [label=''] - The label text.\n\t * @param {boolean} [checked=false] - Whether the switch is initially checked.\n\t * @param {function} [callback=null] - The callback function to call when the switch is changed.\n\t */\n\tconstructor(label = '', checked = false, callback = null) {\n\t\tsuper('label');\n\t\tconst id = this.id = generateId(16);\n\t\tthis.ref.for = id;\n\t\tthis.addClass('cgui-switch');\n\t\tthis.inputRef = createElem('input');\n\t\tthis.inputRef.type = 'checkbox';\n\t\tthis.inputRef.id = id;\n\t\tthis.ref.appendChild(this.inputRef);\n\t\tthis.inputRef.checked = checked;\n\t\tthis.sliderRef = createElem('span');\n\t\tthis.sliderRef.className = 'cgui-switch-slider';\n\t\tthis.ref.appendChild(this.sliderRef);\n\t\tthis.labelRef = createElem('span');\n\t\tthis.labelRef.className = 'cgui-switch-label';\n\t\tthis.labelRef.for = id;\n\t\tthis.ref.appendChild(this.labelRef);\n\t\tthis.ref.tabIndex = 0;\n\t\tthis.setLabel(label);\n\n\t\tif (callback) this.onChange(callback);\n\t}\n\n\t/**\n\t * Set the callback function to call when the switch is changed.\n\t * @param {Function} func - The callback function to call when the switch is changed.\n\t * @returns {Switch}\n\t */\n\tonChange(func) {\n\t\tthis.inputRef.addEventListener('change', e => func(e, this.inputRef.checked));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Bind a property to the switch.\n\t * @param {Object} obj - The object to bind the property to.\n\t * @param {string} prop - The property to bind.\n\t * @returns {Switch}\n\t */\n\tbind(obj, prop) {\n\t\tthis.onChange((_, val) => obj[prop] = val);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get whether the switch is checked.\n\t * @returns {boolean}\n\t */\n\tisChecked() {\n\t\treturn this.inputRef.checked;\n\t}\n\n\t/**\n\t * Get whether the switch is checked.\n\t * @returns {boolean}\n\t */\n\tgetValue() {\n\t\treturn this.isChecked();\n\t}\n\n\t/**\n\t * Set whether the switch is checked.\n\t * @param {boolean} val\n\t * @returns {Switch}\n\t */\n\tsetValue(val) {\n\t\tthis.inputRef.checked = val;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the label of the switch.\n\t * @param {string} label\n\t * @returns {Switch}\n\t */\n\tsetLabel(label) {\n\t\tthis.labelRef.innerHTML = label;\n\t\treturn this;\n\t}\n}\n\n/**\n * A class that represents a menu for selecting one of several values.\n * @public\n * @extends Widget\n */\nclass Dropdown extends Widget {\n\t/**\n\t * Create a new dropdown.\n\t * \n\t * The values parameter should be an object where the keys are the display text and\n\t * the values are the actual values.\n\t * \n\t * @param {string} [label=''] - The label text.\n\t * @param {Object} [values={}] - The values to display in the dropdown.\n\t * @param {string} [value=null] - The initial value of the dropdown.\n\t * @param {function} [callback=null] - The callback function to call when the dropdown\n\t * is changed.\n\t */\n\tconstructor(label = '', values = {}, value = null, callback = null) {\n\t\tsuper('label');\n\t\tconst id = this.id = generateId(16);\n\t\tthis.ref.for = id;\n\t\tthis.addClass('cgui-input-wrapper');\n\t\tthis.selRef = createElem('select');\n\t\tthis.selRef.id = id;\n\t\tthis.selRef.classList.add('cgui-input');\n\t\tthis.ref.appendChild(this.selRef);\n\t\tfor (const [k, v] of Object.entries(values)) {\n\t\t\tconst opt = createElem('option');\n\t\t\topt.textContent = k;\n\t\t\topt.value = v;\n\t\t\tif (v == value) opt.selected = true;\n\t\t\tthis.selRef.appendChild(opt);\n\t\t}\n\t\tthis.labelRef = createElem('span');\n\t\tthis.labelRef.className = 'cgui-input-label';\n\t\tthis.labelRef.for = id;\n\t\tthis.ref.appendChild(this.labelRef);\n\t\tthis.ref.tabIndex = 0;\n\t\tthis.setLabel(label);\n\n\t\tif (callback) this.onChange(callback);\n\t}\n\n\t/**\n\t * Set the callback function to call when the value is changed.\n\t * @param {Function} func - The callback function to call when the value is changed.\n\t * @returns {Select}\n\t */\n\tonChange(func) {\n\t\tthis.selRef.addEventListener('change', e => func(e, this.getValue()));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Bind a property to the dropdown.\n\t * @param {Object} obj - The object to bind the property to.\n\t * @param {string} prop - The property to bind.\n\t * @returns {Select}\n\t */\n\tbind(obj, prop) {\n\t\tthis.onChange((_, val) => obj[prop] = val);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the value of the dropdown.\n\t * @returns {string}\n\t */\n\tgetValue() {\n\t\treturn this.selRef.options[this.selRef.selectedIndex].value;\n\t}\n\n\t/**\n\t * Set the value of the dropdown.\n\t * @param {string} val\n\t * @returns {Select}\n\t */\n\tsetValue(val) {\n\t\tthis.selRef.value = val;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the label of the dropdown.\n\t * @param {string} label\n\t * @returns {Select}\n\t */\n\tsetLabel(label) {\n\t\tthis.labelRef.innerHTML = label;\n\t\treturn this;\n\t}\n}\n\n/**\n * A tree that can be expanded and collapsed, and can also have children.\n * @public\n * @extends Widget\n */\nclass Tree extends Widget {\n\t/**\n\t * Create a new tree that can be expanded and collapsed. You can add children to the tree\n\t * with the `addChild` method so that they appear in the tree.\n\t * @param {string} [title=''] - The title of the tree.\n\t * @param {boolean} [expanded=false] - Whether the tree is expanded.\n\t */\n\tconstructor(title = '', expanded = false) {\n\t\tsuper('div');\n\t\tthis.addClass('cgui-tree');\n\n\t\t// Create header element and set its properties\n\t\tthis.headerRef = createElem('div');\n\t\tthis.headerRef.classList.add('cgui-tree-header');\n\n\t\t// Create title element and set its properties\n\t\tconst titleId = generateId(16);\n\t\tthis.titleRef = createElem('span');\n\t\tthis.titleRef.id = titleId;\n\t\tthis.titleRef.className = 'cgui-tree-title';\n\t\tthis.headerRef.appendChild(this.titleRef);\n\t\tthis.headerRef.tabIndex = 0;\n\t\tthis.setTitle(title);\n\n\t\t// Add space after title\n\t\tthis.headerRef.innerHTML += '&nbsp;';\n\n\t\t// Create arrow element and set its properties\n\t\tthis.arrowRef = createElem('span');\n\t\tthis.arrowRef.className = 'cgui-tree-arrow';\n\t\tthis.arrowRef.innerHTML = config.symbols.expanded;\n\t\tthis.headerRef.appendChild(this.arrowRef);\n\n\t\t// Create content element and set its properties\n\t\tconst contentId = generateId(16);\n\t\tthis.contentRef = createElem('div');\n\t\tthis.contentRef.id = contentId;\n\t\tthis.contentRef.classList.add('cgui-tree-content');\n\n\t\t// Create new View and mount it\n\t\tthis.view = new View().mount(this.contentRef);\n\n\t\t// Append header and content to the tree element\n\t\tthis.ref.appendChild(this.headerRef);\n\t\tthis.ref.appendChild(this.contentRef);\n\n\t\t// Set initial collapsed state\n\t\tif (!expanded) this.collapse();\n\n\t\t// Initialize toggle functionality\n\t\tthis.initToggleOnClick();\n\t}\n\n\t/**\n\t * Set the title of the tree.\n\t * @param {string} html\n\t * @returns {Tree}\n\t */\n\tsetTitle(html) {\n\t\tthis.titleRef.innerHTML = html;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the content of the tree.\n\t * @param {string} html\n\t * @returns {Tree}\n\t */\n\tsetContent(html) {\n\t\tthis.view.setContent(html);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Collapse the tree.\n\t * @returns {Tree}\n\t */\n\tcollapse() {\n\t\tthis.ref.classList.add('collapsed');\n\t\tthis.arrowRef.innerHTML = config.symbols.collapsed;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Expand the tree.\n\t * @returns {Tree}\n\t */\n\texpand() {\n\t\tthis.ref.classList.remove('collapsed');\n\t\tthis.arrowRef.innerHTML = config.symbols.expanded;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Toggle the tree between collapsed and expanded.\n\t * @returns {Tree}\n\t */\n\ttoggle() {\n\t\tthis.ref.classList.toggle('collapsed');\n\t\tif (this.ref.classList.contains('collapsed')) {\n\t\t\tthis.arrowRef.innerHTML = config.symbols.collapsed;\n\t\t} else {\n\t\t\tthis.arrowRef.innerHTML = config.symbols.expanded;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a child widget to the tree.\n\t * @param {Widget} widget\n\t * @returns {Tree}\n\t */\n\tappend(widget) {\n\t\tthis.view.append(widget);\n\t\treturn this;\n\t}\n\n\tinitToggleOnClick(threshold = 10) {\n\t\tthis.headerRef.addEventListener('click', e => {\n\t\t\tthis.toggle();\n\t\t});\n\t}\n\n\t/**\n\t * The `getConfig` function returns a JSON representation of all values in the tree.\n\t * @returns {Object}\n\t */\n\tgetConfig() {\n\t\treturn this.view.getConfig();\n\t}\n\n\t/**\n\t * The `loadConfig` function loads a JSON object into the tree.\n\t */\n\tloadConfig(config) {\n\t\tthis.view.loadConfig(config);\n\t\treturn this;\n\t}\n}\n\n/**\n * Just a container where you can put\n * child elements. They will not differ\n * in any way from the ones outside. Can\n * be used as a column in a row.\n * @public\n * @extends Widget\n */\nclass Container extends Widget {\n\tconstructor() {\n\t\tsuper('div');\n\t\tthis.view = (new View).mount(this.ref);\n\t}\n\n\t/**\n\t * Set the content of the container.\n\t * @param {string} html\n\t * @returns {Container}\n\t */\n\tsetContent(html) {\n\t\tthis.view.setContent(html);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a child widget to the container.\n\t * @param {Widget} widget\n\t * @returns {Container}\n\t */\n\tappend(widget) {\n\t\tthis.view.append(widget);\n\t\treturn this;\n\t}\n}\n\n/**\n * A row that arranges the children horizontally.\n * @public\n * @extends Container\n */\nclass Row extends Container {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.addClass('cgui-row')\n\t}\n}\n\n/**\n * This function opens a pop-up modal window where the user can select one item from the data.\n * @param {string} title - The title displayed in the selection window.\n * @param {String[]} items - The items that will be available for the user to select.\n * @param {boolean} closable - Adds one item to the end to close the menu, returning an index of -1.\n * @returns {Promise} A promise that will resolve with the index of the selected item.\n * @async\n * @public\n */\nfunction openPopupMenu({\n\ttitle,\n\titems,\n\tclosable = true\n}) {\n\treturn new Promise(resolve => {\n\t\tlet divWrapper = createElem('div');\n\t\tlet divPopup = createElem('div');\n\t\tlet divTitle = createElem('div');\n\t\tlet divMenu = createElem('div');\n\n\t\tdivWrapper.className = 'cgui-popup-menu-wrapper cgui-fadein';\n\t\tdivPopup.className = 'cgui cgui-popup-menu';\n\t\tdivTitle.className = 'cgui-popup-menu-title';\n\t\tdivMenu.className = 'cgui-popup-menu-content';\n\n\t\tdivPopup.appendChild(divTitle);\n\t\tdivPopup.appendChild(divMenu);\n\t\tdivWrapper.appendChild(divPopup);\n\n\t\tdivTitle.innerHTML = title;\n\n\t\tlet first = true;\n\n\t\tfor (const item in items) {\n\t\t\tconst btn = createElem('button');\n\t\t\tbtn.className = 'cgui-popup-menu-btn';\n\t\t\tbtn.innerHTML = items[item];\n\t\t\tdivMenu.appendChild(btn);\n\t\t\tif (first) {\n\t\t\t\tfirst = false;\n\t\t\t\tsetTimeout(() => btn.focus(), 0);\n\t\t\t}\n\t\t\tbtn.onclick = () => {\n\t\t\t\tdivWrapper.classList.add('cgui-fadeout');\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tdivWrapper.remove();\n\t\t\t\t\tresolve(item);\n\t\t\t\t}, 150);\n\t\t\t};\n\t\t}\n\n\t\tif (closable) {\n\t\t\tconst btn = createElem('button');\n\t\t\tbtn.className = 'cgui-popup-menu-btn';\n\t\t\tbtn.innerHTML = config.language.close;\n\t\t\tdivMenu.appendChild(btn);\n\t\t\tbtn.onclick = () => {\n\t\t\t\tdivWrapper.classList.add('cgui-fadeout');\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tdivWrapper.remove();\n\t\t\t\t\tresolve(-1);\n\t\t\t\t}, 150);\n\t\t\t};\n\t\t}\n\n\t\tdocument.body.appendChild(divWrapper);\n\t});\n}\n\nexport {\n\tGUIElement,\n\tView,\n\tWindow,\n\tWidget,\n\tText,\n\tButton,\n\tInput,\n\tNumberInput,\n\tSlider,\n\tSwitch,\n\tDropdown,\n\tTree,\n\tContainer,\n\tRow,\n\topenPopupMenu,\n\tutils,\n\tupdateConfig,\n\tgetConfig,\n\tisMobile\n};\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","config","symbols","expanded","collapsed","resize","minWindowWidth","minWindowHeight","language","updateConfig","newConfig","updateNestedConfig","_i","_Object$entries","entries","length","_Object$entries$_i","_slicedToArray","_typeof","undefined","getConfig","$","selector","parent","arguments","document","querySelector","createElem","type","createElement","distance","x1","y1","x2","y2","a","b","Math","sqrt","generateId","chars","result","i","floor","random","clamp","val","min","max","range2percentage","snap","step","Error","remainder","getNumberOfDigitsAfterPeriod","number","parts","toString","split","countDigitsAfterDecimal","numberString","indexOfDecimal","indexOf","getWidgetName","widget","Text","Button","Input","NumberInput","Switch","Slider","Dropdown","Tree","Container","Row","view","Widget","GUIElement","appendToBody","body","appendChild","getRef","includeCSS","css","head","style","setAttribute","innerHTML","includeCSSLink","url","link","rel","href","includeJS","script","src","loadTheme","_$","id","isMobile","test","navigator","userAgent","utils","_init","addClass","_addClass","_this$ref$classList","ref","classList","add","apply","_setClass","className","trim","_removeClass","_this$ref$classList2","remove","_getRef","_destroy","destroy","_classCallCheck","_createClass","_init2","_mount","target","_setContent","_setText","textContent","_append","children","push","_f3","c","_destroy2","_a","_f","_getConfig","processView","res","child","el","includes","getValue","_loadConfig","item","items","widgets","offset","warned","console","warn","concat","setValue","loadConfig","View","_setTitle","html","titleRef","_setContent2","setContent","_setText2","setText","_append2","append","_move","x","y","left","top","_setWidth","width","_setHeight","height","contentRef","_resize","setWidth","setHeight","_collapse","arrowRef","_expand","_toggle","expand","collapse","_hide","display","_show","_destroy3","_f4","win","_sendToTop","contains","_a2","_toConsumableArray","getElementsByClassName","_f2","_i2","_initActivationOnClic","_this2","addEventListener","sendToTop","_initToggleOnClick","threshold","startX","startY","_this3","isClick","headerRef","e","clientX","clientY","toggle","_initDraggable","offsetX","offsetY","_this4","isMouseDown","onMouseDown","preventDefault","touches","offsetLeft","offsetTop","onMouseMove","isDragging","isResizing","move","onMouseUp","_initResize","sx","sy","dx","dy","iw","ih","_this5","stopPropagation","_ref2","newWidth","newHeight","removeClass","resizeRef","_getRef2","_get","_getConfig2","_loadConfig2","Window","_GUIElement","_ref","_this","_ref$x","_ref$y","_ref$width","_ref$height","_ref$title","title","_ref$expanded","_ref$collapsible","collapsible","_ref$collapseThreshol","collapseThreshold","_ref$draggable","draggable","_ref$dragThreshold","dragThreshold","_ref$resizable","resizable","_callSuper","position","role","titleId","setTitle","hidden","contentId","mount","initDraggable","initResize","initToggleOnClick","initActivationOnClick","_inherits","_setContent3","_setText3","_onClick","f","_bind","SyntaxError","_GUIElement2","_this6","elementType","_Widget","_this7","text","_Widget2","_this8","callback","onClick","_setLabel","label","labelRef","_onInput","_this10","inputRef","_bind2","onInput","_","_setValue","_getValue","_Widget3","_this9","setLabel","_setLabel2","_onInput2","_this12","_bind3","_setValue2","p","parseFloat","isNaN","_getValue2","_Widget4","_this11","_setLabel3","_onChange","_this14","_bind4","onChange","_setMin","_setMax","_setStep","accuracy","_setValue3","toFixed","displayValue","thumbRef","marginLeft","transform","_initSlider","_this15","listeners","Array","updateSlider","dispatchEvent","CustomEvent","removeEventListener","bb","sliderRef","getBoundingClientRect","style1","getComputedStyle","style2","getPropertyValue","parseInt","right","_getValue3","_Widget5","_ref3","_this13","_ref3$label","_ref3$value","_ref3$min","_ref3$max","_ref3$step","_ref3$callback","setMin","setMax","setStep","initSlider","_onChange2","func","_this17","checked","_bind5","_isChecked","_getValue4","isChecked","_setValue4","_setLabel4","_Widget6","_this16","tabIndex","_onChange3","_this19","selRef","_bind6","_getValue5","options","selectedIndex","_setValue5","_setLabel5","_Widget7","_this18","values","_i3","k","v","opt","selected","_setTitle2","_setContent4","_collapse2","_expand2","_toggle2","_append3","_initToggleOnClick2","_this21","_getConfig3","_loadConfig3","_Widget8","_this20","_setContent5","_append4","_Widget9","_this22","_Container","_this23","openPopupMenu","_ref4","_ref4$closable","closable","Promise","resolve","divWrapper","divPopup","divTitle","divMenu","first","_loop","btn","_ref6","setTimeout","focus","onclick","_ref7","close"],"sourceRoot":""}